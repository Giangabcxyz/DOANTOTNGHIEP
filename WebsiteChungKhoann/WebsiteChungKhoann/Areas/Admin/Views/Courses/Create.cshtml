@model WebsiteChungKhoann.Models.Course

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Course</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Link_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!-- Trường nhập URL của video -->
                @Html.TextBoxFor(model => model.Link_Id, new { @class = "form-control", placeholder = "Enter YouTube video URL" })
                @Html.ValidationMessageFor(model => model.Link_Id, "", new { @class = "text-danger" })

                <!-- Hiển thị video nếu có URL -->
                @if (Model != null && !string.IsNullOrEmpty(Model.Link_Id))
                {
                    <video width="320" height="240" controls>
                        <source src="https://www.youtube.com/embed/@(GetYouTubeVideoId(Model.Link_Id))" type="video/mp4">
                        Your browser does not support the video tag.
                    </video>
                }

                <!-- Kết thúc hiển thị video -->
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@functions {
    public string GetYouTubeVideoId(string url)
    {
        string videoId = string.Empty;
        try
        {
            Uri videoUri = new Uri(url);
            string host = videoUri.Host.ToLower();

            if (host.Contains("youtube.com"))
            {
                string query = videoUri.Query;
                if (!string.IsNullOrEmpty(query))
                {
                    videoId = System.Web.HttpUtility.ParseQueryString(query)["v"];
                }
                else
                {
                    string[] segments = videoUri.Segments;
                    if (segments.Length >= 2)
                    {
                        videoId = segments[segments.Length - 1].Trim('/');
                    }
                }
            }
            else if (host.Contains("youtu.be"))
            {
                string[] segments = videoUri.Segments;
                if (segments.Length >= 2)
                {
                    videoId = segments[1].Trim('/');
                }
            }

            // Kiểm tra xem videoId có phải là ID hợp lệ hay không
            if (!IsYouTubeVideoIdValid(videoId))
            {
                videoId = string.Empty;
            }
        }
        catch (Exception ex)
        {
            // Xử lý ngoại lệ nếu cần
        }
        return videoId;
    }

    private bool IsYouTubeVideoIdValid(string videoId)
    {
        // Kiểm tra xem videoId có đúng định dạng của một ID video YouTube hay không
        // Định dạng ID video YouTube là chuỗi có độ dài 11 ký tự
        return !string.IsNullOrEmpty(videoId) && videoId.Length == 11;
    }
}

